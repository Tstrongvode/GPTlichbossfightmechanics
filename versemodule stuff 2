Enable	
Enables this device.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


player_reference_device class
Learn technical details about the player_reference_device class.

UEFNplayer_reference_device class
Used to relay agent statistics to other devices and agents. Can transmit statistics such as elimination count, eliminated count, or scores when certain conditions are met. Can also project a hologram of the agent and display text that can be altered in various positions and curvatures.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
ActivatedEvent	listenable(payload)	
Signaled when this device is activated. Sends the agent stored in the device.

AgentReplacedEvent	listenable(payload)	
Signaled when the agent tracked by this device is replaced. Sends the new agent stored in the device.

AgentUpdatedEvent	listenable(payload)	
Signaled when the agent tracked by this device is updated. Sends the new agent stored in the device.

AgentUpdateFailsEvent	listenable(payload)	
Signaled when the agent tracked by this fails to be updated. Sends the agent that attempted to be stored in this device.

TrackedStatChangedEvent	listenable(payload)	
Signaled when a stat tracked by this device is updated. Sends the agent stored in the device.

Functions
Function Name	Description
Activate	
Ends the round/game.

Clear	
Clears the state of this device.

Disable	
Disables this device.

Enable	
Enables this device.

GetAgent	
Returns the agent currently referenced by the device.

GetStatValue	
Returns the stat value that this device is currently tracking

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

IsReferenced	
Is true when Agent is the player being referenced by the device.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

Register	
Registers Agent as the agent being tracked by this device.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.



player_spawner_device class
Learn technical details about the player_spawner_device class.

UEFNplayer_spawner_device class
Used to spawn an agent on an island. Use multiple player_spawner_devices to spawn multiple agents.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
SpawnedEvent	listenable(payload)	
Signaled when an agent is spawned from this device. Sends the agent that spawned.

Functions
Function Name	Description
Disable	
Disables this device.

Enable	
Enables this device.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


powerup_device class
Learn technical details about the powerup_device class.

UEFNpowerup_device class
Base class for various powerup devices offering common events like ItemPickedUpEvent.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
ItemPickedUpEvent	listenable(payload)	
Signaled when the powerup is picked up by an agent. Sends the agent that picked up the powerup.

Functions
Function Name	Description
Despawn	
Despawns this powerup from the experience.

GetDuration	
Returns the Duration that this powerup will be active for on any player it is applied to.

GetRemainingTime	
If the Agent has the effect applied to them, this will return the remaining time the effect has. Returns -1.0 if the effect has an infinite duration. Returns 0 if the Agent does not have the effect applied.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

HasEffect	
Returns the Agent has the powerup's effect (or another of the same type) applied to them.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

Pickup	
Grants this powerup to Agent.

Pickup	
Grants this powerup without an agent reference. Requires Apply To set to All Players.

SetDuration	
Updates the Duration for this powerup, clamped to the Min and Max defined in the device. Will not apply to any currently applied effects.

Spawn	
Spawns the powerup into the experience so users can interact with it.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.



prop_manipulator_device class
Learn technical details about the prop_manipulator_device class.

UEFNprop_manipulator_device class
Used to manipulate the properties of one or more props in a specified area (e.g. Visibility/Destructibility).

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
DamagedEvent	listenable(payload)	
Signaled when props affected by this device are damaged. Sends the agent that damaged the prop.

DestroyedEvent	listenable(payload)	
Signaled when props affected by this device are destroyed. Sends the agent that destroyed the prop.

HarvestingEvent	listenable(payload)	
Signaled when prop resource nodes affected by this device are harvested. Sends the agent that harvested resources from the prop.

ResourceDepletionEvent	listenable(payload)	
Signaled when prop resource nodes affected by this device are completely depleted of energy. Sends the agent that depleted the prop's energy.

Functions
Function Name	Description
Disable	
Disables this device.

DisableResourceNodeOverrides	
Sets the Override Resource option to No.

Enable	
Enables this device.

ExhaustResources	
Empties the resources of all props affected by this device.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

HideProps	
Hides all props affected by this device.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

RestockResources	
Restocks the resources of all props affected by this device.

RestoreHealth	
Restores health of all props affected by this device.

SetResourceOverridesActive	
Sets the Override Resource option to Yes.

ShowProps	
Shows all props affected by this device.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


prop_spawner_base_device class
Learn technical details about the prop_spawner_base_device class.

UEFNprop_spawner_base_device class
Base class for devices that spawn a prop object.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has functions, but no data members.

Functions
Function Name	Description
DestroyAllSpawnedObjects	
Destroys all props spawned from this device.

Disable	
Disables this device.

Enable	
Enables this device.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

SpawnObject	
Spawns the prop associated with this device.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


A device used to damage players who collide with it. Can also be used as a trigger to activate other devices.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has functions, but no data members.

Functions
Function Name	Description
Begin	
Starts the damage sequence.

Disable	
Disables this device.

Enable	
Enables this device.

End	
Stops the damage sequence.

GetDamage	
Returns the damage to be applied to those hit by an active wave. Clamped between 0 <= GetDamage <= 100000.

GetLoopCount	
Returns the total number of waves this sequence will complete before ending its sequence. 0 indicates the sequence will continue indefinitely.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

GetWaveSpeed	
Returns the speed (in meters per second) at which the waves generated by this sequencer will travel.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

ResumeSequence	
Resumes the damage sequence from the last position where it was stopped.

SetDamage	
Sets the damage to be applied to those hit by an active wave. Clamped between 0 <= GetDamage <= 100000. Wave visuals will change to reflect whether the wave causes damage or not.

SetLoopCount	
Sets the total number of waves this sequence will complete before ending its sequence. LoopCount = 0 indicates the sequence should continue indefinitely.

SetWaveSpeed	
Sets the speed (in meters per second) at which the waves generated by this sequencer will travel.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


score_manager_device class
Learn technical details about the score_manager_device class.

UEFNscore_manager_device class
Used to manipulate scores using in-experience triggers. If Activating Team is set to a specific team, then you should use the agent overloads of each function. The agent's team will be used to determine if that agent is allowed to affect the state of the device.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
MaxTriggersEvent	listenable(payload)	
Signaled when the this device reaches its maximum number of triggers as defined by Times Can Trigger. Sends the agent who last triggered the device.

ScoreOutputEvent	listenable(payload)	
Signaled when the this device awards points to an agent. Sends the agent who received the points.

Functions
Function Name	Description
Activate	
Grant points to Agent.

Activate	
Grants points.

Decrement	
Decrements the score quantity to be awarded by the next activation by 1.

Decrement	
Decrements the score quantity to be awarded by the next activation by 1.

Disable	
Disables this device.

Disable	
Disables this device.

Enable	
Enables this device.

Enable	
Enables this device.

GetCurrentScore	
Returns the current score for Agent.

GetScoreAward	
Returns the score to be awarded by the next activation.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

Increment	
Increments the score quantity to be awarded by the next activation by 1.

Increment	
Increments the score quantity to be awarded by the next activation by 1.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

Reset	
Resets this device to its original state.

Reset	
Resets this device to its original state.

SetScoreAward	
Sets the score to be awarded by the next activation to Value.

SetToAgentScore	
Sets the score to be awarded by the next activation to Agent's current score.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


signal_remote_manager_device class
Learn technical details about the signal_remote_manager_device class.

UEFNsignal_remote_manager_device class
Used to trigger a custom response to a Primary or Secondary signal, sent by a Signal Remote item.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
PrimarySignalEvent	listenable(payload)	
Signaled when a player has triggered the Primary signal using a Signal Remote item. Sends the agent that triggered the signal.

SecondarySignalEvent	listenable(payload)	
Signaled when a player has triggered the Secondary signal using a Signal Remote item. Sends the agent that triggered the signal.

Functions
Function Name	Description
Disable	
Disables this device.

Enable	
Enables this device.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


switch_device class
Learn technical details about the switch_device class.

UEFNswitch_device class
Used to allow agents to turn other linked devices on/off or other custom state changes.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
ClearEvent	listenable(payload)	
Signaled when the persistent data is cleared by the specified agent. Sends the agent that cleared persistent data on the device.

IfOffWhenCheckedEvent	listenable(payload)	
Signaled if the switch is off when the state is checked.

IfOnWhenCheckedEvent	listenable(payload)	
Signaled if the switch is on when the state is checked.

StateChangesEvent	listenable(payload)	
Signaled when the switch state changes.

StateLoadEvent	listenable(payload)	
Signaled when the switch state is loaded by the specified agent. Sends the agent that loaded the state on the device.

StateSaveEvent	listenable(payload)	
Signaled when the switch state is saved.

TurnedOffEvent	listenable(payload)	
Signaled when the switch is turned off by the specified agent. Sends the agent that turned off the device.

TurnedOnEvent	listenable(payload)	
Signaled when the switch is turned on by the specified agent. Sends the agent that turned on the device.

Functions
Function Name	Description
CheckState	
Checks the device state with Agent acting as the instigator of the action.

ClearAllPersistenceData	
Clears persistence data for all agents.

ClearPersistenceData	
Clears persistence data for Agent.

Disable	
Disables this device.

Enable	
Enables this device.

GetCurrentResetTime	
Returns the time before the switch will reset itself to default. Returns -1.0 if Store State Per Player is Yes or if there is no active reset timer.

GetCurrentResetTime	
Returns the time before the switch will reset itself to default for Agent. Returns -1.0 if there is no active reset timer.

GetCurrentState	
Returns the current state of this switch: true (on) or false (off). Use this overload of GetCurrentState when this device has Store State Per Player set to Yes.

GetCurrentState	
Returns the current state of this switch: true (on) or false (off). Use this overload of GetCurrentState when this device has Store State Per Player set to No.

GetInteractionTime	
Returns the Interaction Time required to activate this device (in seconds).

GetStateResetTime	
Returns the value of State Reset Time for the device. Returns -1.0 if State Reset Time is not used.

GetStateResetTime	
Returns the value of State Reset Time for the device, for a specific player. Returns -1.0 if State Reset Time is not used.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

IsStatePerAgent	
Query whether this device has a single global on/off state, or has a personalized on/off state for each individual agent.

LoadState	
Loads the device state with Agent acting as the instigator of the action.

LoadStateForAll	
Loads the device state for all players.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

SaveState	
Saves the device state with Agent acting as the instigator of the action.

SaveStateForAll	
Saves the device state for all players

SetInteractionTime	
Sets the Interaction Time required to activate this device (in seconds).

SetState	
Sets the state of the switch to a specific value for a specific Agent. Use when the device has Store State Per Player set to Yes.

SetState	
Sets the state of the switch to a specific value. Use when the device has Store State Per Player set to No.

SetStateResetTime	
Updates the State Reset Time for the device, clamped to the Min and Max defined in the device. This will not apply to any state reset timers currently in effect. Set to 0.0 to disable the State Reset Time. Set to less than 0.0 to reset to default.

SetStateResetTime	
Updates the State Reset Time for the device, for a specific player (if Store State Per Player is Yes), clamped to the Min and Max defined in the device. This will not apply to any state reset timers currently in effect. Set to 0.0 to disable the State Reset Time. Set to less than 0.0 to reset to default.

SetTurnOffInteractionText	
Sets the Turn Off Text to be displayed to a user when the switch is currently on, and offers an interaction to switch it off. Clamped to 150 characters.

SetTurnOnInteractionText	
Sets the Turn On Text to be displayed to a user when the switch is currently off, and offers an interaction to switch it on. Clamped to 150 characters.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.

ToggleState	
Toggles between TurnOn and TurnOff with Agent acting as the instigator of the action.

TurnOff	
Turns off the device with Agent acting as the instigator of the action.

TurnOn	
Turns on this device with Agent acting as the instigator of the action.


team_settings_and_inventory_device class
Learn technical details about the team_settings_and_inventory_device class.

UEFNteam_settings_and_inventory_device class
Provides team and inventory configurations that go beyond the choices the My Island settings provide. Can also be used to customize individual devices and create variations in team setup.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
EnemyEliminatedEvent	listenable(payload)	
Signaled when an enemy of Team is eliminated by a team member. Sends the agent team member who eliminated the enemy.

TeamMemberEliminatedEvent	listenable(payload)	
Signaled when a member of Team is eliminated. Sends the agent that was eliminated.

TeamMemberSpawnedEvent	listenable(payload)	
Signaled when a member of Team is spawned.Sends the agent that has spawned.

TeamOutOfRespawnsEvent	listenable(payload)	
Signaled when Team runs out of respawns.

Functions
Function Name	Description
EndRound	
Ends the round and Team wins the round.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

IsOnTeam	
Is true if Agent is on Team.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


timer_device class
Learn technical details about the timer_device class.

UEFNtimer_device class
Provides a way to keep track of the time something has taken, either for scoreboard purposes, or to trigger actions. It can be configured in several ways, either acting as a countdown to an event that is triggered at the end, or as a stopwatch for an action that needs to be completed before a set time runs out.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
FailureEvent	listenable(payload)	
Signaled when the timer completes or ends with failure. Sends the agent that activated the timer, if any.

StartUrgencyModeEvent	listenable(payload)	
Signaled when the timer enters Urgency Mode. Sends the agent that activated the timer, if any.

SuccessEvent	listenable(payload)	
Signaled when the timer completes or ends with success. Sends the agent that activated the timer, if any.

Functions
Function Name	Description
ClearPersistenceData	
Clears this device's saved data for Agent.

ClearPersistenceDataForAll	
Clears this device's saved data for all agents.

ClearPersistenceDataForAll	
Clears this device's saved data for all agents.

Complete	
Completes the timer for Agent.

Complete	
Completes the timer.

CompleteForAll	
Completes the timer for all agents.

CompleteForAll	
Completes the timer for all agents.

Disable	
Disables this device for Agent. While disabled this device will not receive signals.

Disable	
Disables this device. While disabled this device will not receive signals.

Enable	
Enables this device for Agent.

Enable	
Enables this device.

GetActiveDuration	
Returns the remaining time (in seconds) on the timer for Agent.

GetActiveDuration	
Returns the remaining time (in seconds) on the timer if it is set to be global.

GetMaxDuration	
Returns the maximum duration of the timer (in seconds).

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

IsStatePerAgent	
Succeeds if this device is tracking timer state for each individual agent independently. Fails if state is being tracked globally for all agent's.

Load	
Loads this device's saved data for Agent.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

Pause	
Pauses the timer for Agent.

Pause	
Pauses the timer.

PauseForAll	
Pauses the timer for all agents.

PauseForAll	
Pauses the timer for all agents.

Reset	
Resets the timer back to its base time and stops it for Agent.

Reset	
Resets the timer back to its base time and stops it.

ResetForAll	
Resets the timer back to its base time and stops it for all agents.

ResetForAll	
Resets the timer back to its base time and stops it for all agents.

Resume	
Resumes the timer for Agent.

Resume	
Resumes the timer.

ResumeForAll	
Resumes the timer for all agents.

ResumeForAll	
Resumes the timer for all agents.

Save	
Saves this device's data for Agent.

SetActiveDuration	
Sets the remaining time (in seconds) on the timer, if active, on Agent.

SetActiveDuration	
Sets the remaining time (in seconds) on the timer, if active. Use this function if the timer is set to use the same time for all agent's.

SetLapTime	
Sets the lap time indicator for Agent.

SetLapTimeForAll	
Sets the lap time indicator for all agents.

SetLapTimeForAll	
Sets the lap time indicator for all agents.

SetMaxDuration	
Sets the maximum duration of the timer (in seconds).

Start	
Starts the timer for Agent.

Start	
Starts the timer.

StartForAll	
Starts the timer for all agents.

StartForAll	
Starts the timer for all agents.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.




tracker_device class
Learn technical details about the tracker_device class.

UEFNtracker_device class
Allows creation and HUD tracking of custom objectives for agents to complete.

 	 
Verse using statement	using { /Fortnite.com/Devices }
Inheritance Hierarchy
This class is derived from the following hierarchy, starting with creative_object:

Name	Description
creative_object	
Base class for creative devices and props.

creative_device_base	
Base class for creative_device.

Members
This class has both data members and functions.

Data
Data Member Name	Type	Description
CompleteEvent	listenable(payload)	
Signaled when the tracked value reaches GetTarget for an agent. Sends the agent that reached GetTarget for their tracked value.

Functions
Function Name	Description
Assign	
Assigns the device to Agent (and any agents sharing progress).

AssignToAll	
Assigns this device to all valid agents.

ClearPersistence	
Clears tracked progress for Agent. Only valid if Use Persistence is set to Use.

Complete	
The objective immediately completes.

DecreaseTargetValue	
Decreases the target value for Agent by 1.

Decrement	
Decrease the tracked value by Amount to Change on Received Signal for Agent.

GetTarget	
Returns the target value that must be achieved in order for CompleteEvent to trigger. Clamped to 0 <= GetTarget <= 10000.

GetTransform	
Returns the transform of the creative_object with units in cm. You must check creative_object.IsValid before calling this if there is a possibility the object has been disposed or destroyed by gameplay. Otherwise a runtime error will result.

GetValue	
Returns the current total tracked value for all players.

GetValue	
Returns the current total tracked value for the team at TeamIndex.

GetValue	
Returns the current tracked value for Agent.

HasReachedTarget	
Is true if Agent has reached the TargetValue for the tracker.

IncreaseTargetValue	
Increases the target value for Agent by 1.

Increment	
Increases the tracked value by Amount to Change on Received Signal for Agent.

IsActive	
Is true if Agent currently has the quest active.

Load	
Loads tracked progress for Agent. Only valid if Use Persistence is set to Use.

LoadForAll	
Loads tracked progress for all valid agents. Only valid if Use Persistence is set to Use.

MoveTo	
Moves the creative_object to the specified Position and Rotation over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

MoveTo	
Moves the creative_object to the specified Transform over the specified time. If an animation is currently playing on the creative_object it will be stopped and put into the AnimationNotSet state.

Remove	
Removes this device from Agent (and any agents sharing progress).

RemoveFromAll	
Removes this device from all valid agents.

Reset	
Resets the progress for Agent (and any agents sharing progress).

Save	
Saves tracked progress for Agent. Only valid if Use Persistence is set to Use.

SetDescriptionText	
Sets a description for the tracker_device, which is displayed if Show on HUD is enabled. Text has a 64 character limit.

SetTarget	
Sets the target value that must be achieved in order for CompleteEvent to trigger. Clamped to 0 <= TargetValue <= 10000.

SetTitleText	
Sets the title for the tracker_device, which is displayed if Show on HUD is enabled. Text has a 32 character limit.

SetValue	
Sets the current tracked value for the device for all active players.

SetValue	
Sets the current tracked value for the device for the Team at the TeamIndex. If Sharing is set to Individual, this will set the value for all team members. If Sharing is set to All, this will set the value for all players.

SetValue	
Sets the current tracked value for the device for a specific 'Agent'. If Sharing is set to Team, this will set the value for their team. If Sharing is set to All, this will set the value for everyone.

TeleportTo	
Teleports the creative_object to the specified Position and Rotation.

TeleportTo	
Teleports the creative_object to the specified location defined by Transform, also applies rotation and scale accordingly.


Game module
Learn technical details about the Game module.

UEFNGame module
Module import path: /Fortnite.com/Game

Fortnite.com

Game

Classes and Structs
Name	Description
elimination_result	
Result data for fort_character elimination events.

damage_args	
Parameters for common damage functions on Fortnite objects.

damage_result	
Results for damage events on Fortnite objects.

healing_args	
Parameters for common healing functions on Fortnite objects.

healing_result	
Results for healing events on Fortnite objects.

Interfaces
Name	Description
positional	
Implemented by objects to allow reading position information.

healthful	
Implemented by Fortnite objects that have health state and can be eliminated.

shieldable	
Implemented by Fortnite objects that have shields. A shield is a method of protection that can take incoming damage while leaving the health state unchanged.

damageable	
Implemented by Fortnite objects that can be damaged.

healable	
Implemented by Fortnite objects that can be healed.

game_action_instigator	
Implemented by Fortnite objects that initiate game actions, such as damage and heal. For example, player or agents. Event listeners often use game_action_instigators to calculate player damage scores.

game_action_causer	
Implemented by Fortnite objects that can be passed through game action events, such as damage and heal. For example: player, vehicle, or weapon.

Event Listeners often use game_action_causer to pass along additional information about what weapon caused the damage. Systems will then use that information for completing quests or processing game specific event logic.



Playspaces module
Learn technical details about the Playspaces module.

UEFNPlayspaces module
Module import path: /Fortnite.com/Playspaces

Fortnite.com

Playspaces

Interfaces
Name	Description
fort_playspace	
A nested container that scopes objects, style, gameplay rules, visuals, etc. All objects and players in an experience will belong to a fort_playspace. There is typically one fort_playspace for an entire experience, though this may change in the future as the platform evolves.

To access the fort_playspace for a creative_device use creative_device.GetPlayspace.


Teams module
Learn technical details about the Teams module.

UEFNTeams module
Module import path: /Fortnite.com/Teams

Fortnite.com

Teams

Interfaces
Name	Description
fort_team_collection	
Collection used to manage teams and agents on those teams. Use fort_playspace.GetTeamCollection() to get the team_collection for the active experience.

Enumerations
Name	Description
team_attitude	
A generic set of team attitudes. Use this enum to model relationship behavior between your experience's agents/teams.


UI module
Learn technical details about the UI module.

UEFNUI module
Module import path: /Fortnite.com/UI

Fortnite.com

UI

Classes and Structs
Name	Description
text_button_base	
Button with text message common base class. Displays a button with a custom message string.

button_loud	
Text button with big and loud styling applied.

button_regular	
Text button with normal styling applied.

button_quiet	
Text button with quiet styling applied.

creative_hud_identifier_all	
creative_hud_identifier_build_menu	
creative_hud_identifier_crafting_resources	
creative_hud_identifier_elimination_counter	
creative_hud_identifier_equipped_item	
creative_hud_identifier_experience_level	
creative_hud_identifier_experience_supercharged	
creative_hud_identifier_experience_ui	
creative_hud_identifier_health	
creative_hud_identifier_health_numbers	
creative_hud_identifier_hud_info	
creative_hud_identifier_interaction_prompts	
creative_hud_identifier_map_prompts	
creative_hud_identifier_mimimap	
creative_hud_identifier_minimap	
creative_hud_identifier_pickup_stream	
creative_hud_identifier_player_count	
creative_hud_identifier_player_inventory	
creative_hud_identifier_round_info	
creative_hud_identifier_round_timer	
creative_hud_identifier_shield_numbers	
creative_hud_identifier_shileds	
creative_hud_identifier_shields	
creative_hud_identifier_storm_notifications	
creative_hud_identifier_storm_timer	
creative_hud_identifier_team_info	
player_hud_identifier_all	
hud_identifier_world_resource_wood	
hud_identifier_world_resource_stone	
hud_identifier_world_resource_metal	
hud_identifier_world_resource_permanite	
hud_identifier_world_resource_gold_currency	
hud_identifier_world_resource_ingredient	
hud_element_identifier	
Used to identify a HUD element.

slider_regular	
Slider with a text value. Displays a slider, its progress bar and value.

text_block	
Text block widget. Displays text to the user.

Interfaces
Name	Description
fort_hud_controller	
A HUD controller that allows for showing and hiding of HUD elements.


fort_hud_controller interface
Learn technical details about the fort_hud_controller interface.

UEFNfort_hud_controller interface
A HUD controller that allows for showing and hiding of HUD elements.

 	 
Verse using statement	using { /Fortnite.com/UI }
Members
This interface has functions, but no data members.

Functions
Function Name	Description
ShowElements	
Shows a set of HUD elements.

HideElements	
Hides a set of HUD elements.

ResetElementVisibility	
Resets the visibility for a set of HUD elements.


Copyright Epic Games, Inc. All Rights Reserved. ############################################### Generated Digest of Verse API DO NOT modify this manually! Generated from build: ++Fortnite+Release-26.20-CL-27950014 ###############################################

UnrealEngine.com

Temporary

UI

Diagnostics

Curves

SpatialMath

Verse.org

Verse

Simulation

Assets

Random

Colors

Native

Concurrency



Colors module
Learn technical details about the Colors module.

UEFNColors module
Module import path: /Verse.org/Colors

Verse.org

Colors

NamedColors
Classes and Structs
Name	Description
color	
Represents colors as RGB triples in the ACES 2065-1 color space. Component values are linear (i.e. *gamma* = 1.0).

Functions
Name	Description
operator'+'	
Makes an ACES 2065-1 color from the component-wise sum of c0 and c1.

operator'-'	
Makes an ACES 2065-1 color from the component-wise difference of c0 and c1.

operator'*'	
Makes an ACES 2065-1 color from the component-wise product of c0 and c1.

operator'*'	
Makes an ACES 2065-1 color from each component of c scaled by factor.

operator'*'	
Makes an ACES 2065-1 color from each component of c scaled by factor.

operator'*'	
Makes an ACES 2065-1 color from each component of c scaled by factor.

operator'*'	
Makes an ACES 2065-1 color from each component of c scaled by factor.

operator'/'	
Makes an ACES 2065-1 color from each component of c divided by factor.

operator'/'	
Makes an ACES 2065-1 color from each component of c divided by factor.

MakeColorFromSRGB	
Makes an ACES 2065-1 color from sRGB components Red, Green, and Blue. Normal sRGB component values are between 0.0 and 1.0, but this can handle larger values.

MakeSRGBFromColor	
Makes an sRGB tuple by converting InColor from an ACES 2065-1 color to sRGB.

MakeColorFromSRGBValues	
Makes an ACES 2065-1 color from the integer sRGB components Red, Green, and Blue. Valid sRGB component values are between '0' and '255', inclusive.

MakeColorFromHex	
Makes an ACES 2065-1 color from a CSS-style sRGB hexString. Supported formats are:

RGB
RRGGBB
RRGGBBAA
RGB
RRGGBB
RRGGBBAA
An invalid hex string will return Black.

MakeColorFromHSV	
Makes an ACES 2065-1 color from Hue, Saturation, and Value components. Components use the HSV color model in the sRGB color space. Expected ranges:

0.0 <= Hue <= 360.0
0.0 <= Saturation <= 1.0
0.0 <= Value <= 1.0 Values out of expected ranges will undergo range reduction and conversion.
MakeHSVFromColor	
Makes an HSV tuple by converting InColor from an ACES 2065-1 color to sRGB and applying the HSV color model.

MakeColorFromTemperature	
Makes an ACES 2065-1 color from the chromaticity of a blackbody radiator at Temperature Kelvin. Temperature is clamped such that 0 <= Temperature.


Copyright Epic Games, Inc. All Rights Reserved. ############################################### Generated Digest of Verse API DO NOT modify this manually! Generated from build: ++Fortnite+Release-26.20-CL-27950014 ###############################################

Verse.org

Simulation

Tags
Classes and Structs
Name	Description
agent	
player	
session	
Type for which there is a single instance per round. Use GetSession to get the current round's session instance. May be used with weak_map to implement global variables. Note: may be changed in a future release to a single instance per game. Round-local behavior should not be relied upon.

team	
Functions
Name	Description
GetSession	
Returns the session corresponding to the current round. The result can be used with weak_map to implement global variables. Note: may be changed in a future release to return a single instance per game. Round-local behavior should not be relied upon.

Sleep	
Waits specified number of seconds and then resumes. If Seconds = 0.0 then it waits until next tick/frame/update. If Seconds = Inf then it waits forever and only calls back if canceled - such as via race. If Seconds < 0.0 then it completes immediately and does not yield to other aysnc expressions. Waiting until the next update (0.0) is especially useful in a loop of a coroutine that needs to do some work every update and this yields to other coroutines so that it doesn't hog a processor's resources. Waiting forever (Inf) will have any expression that follows never be evaluated. Occasionally it is desireable to have a task never complete such as the last expression in a race subtask where the task must never win the race though it still may be canceled earlier. Immediately completing (less than 0) is useful when you want programmatic control over whether an expression yields or not.

GetSimulationElapsedTime	
Get the seconds that have elapsed since the world began simulating


Concurrency module
Learn technical details about the Concurrency module.

UEFNConcurrency module
Module import path: /Verse.org/Concurrency

Verse.org

Concurrency

Classes and Structs
Name	Description
task(t)	
Functions
Name	Description
awaitable	
A parametric interface implemented by events with a payload that can be waited on. Matched with signalable.

awaitable	
task	



Assets module
Learn technical details about the Assets module.

UEFNAssets module
Module import path: /Verse.org/Assets

Verse.org

Assets

Classes and Structs
Name	Description
material	
mesh	
texture



Verse module
Learn technical details about the Verse module.

UEFNVerse module
Module import path: /Verse.org/Verse

Verse.org

Verse

Classes and Structs
Name	Description
event(t)	
A recurring, successively signaled parametric event with a payload allowing a simple mechanism to coordinate between concurrent tasks:

Await suspends tasks to wait on this event,
another task Signals this event and resumes the suspended tasks in FIFO order.
locale	
Used for message localization.

message	
A localizable text message.

Interfaces
Name	Description
cancelable	
Implemented by classes that allow users to cancel an operation. For example, calling subscribable.Subscribe with a callback returns a cancelable object. Calling Cancel on the return object unsubscribes the callback.

disposable	
Implemented by classes whose instances have limited lifetimes.

invalidatable	
Implemented by classes whose instances can become invalid at runtime.

Functions
Name	Description
operator'='	
operator'<>'	
prefix'-'	
operator'+'	
operator'-'	
operator'*'	
operator'/'	
operator'+='	
operator'-='	
operator'*='	
Abs	
operator'>'	
operator'>='	
operator'<'	
operator'<='	
Ceil	
Floor	
prefix'-'	
operator'+'	
operator'-'	
operator'*'	
operator'/'	
operator'+='	
operator'-='	
operator'*='	
operator'/='	
Abs	
operator'*'	
operator'*'	
operator'>'	
operator'>='	
operator'<'	
operator'<='	
operator'?'	
operator'+'	
operator'+='	
operator'()'	
operator'()'	
operator'()'	
ConcatenateMaps	
operator'()'	
operator'()'	
weak_map	
operator'?'	
Concatenate	
Makes a flattened array by concatenating the elements of Arrays.

Err	
Halts the Verse runtime with error Message.

event	
A recurring, successively signaled parametric event with a payload allowing a simple mechanism to coordinate between concurrent tasks:

Await suspends tasks to wait on this event,
another task Signals this event and resumes the suspended tasks in FIFO order.
event	
A recurring, successively signaled event allowing a simple mechanism to coordinate between concurrent tasks.

Ceil	
Returns the smallest int that is greater than or equal to Val. Fails if not IsFinite(Val).

Floor	
Returns the largest int that is less than or equal to Val. Fails if not IsFinite(Val).

Round	
Returns Val rounded to the nearest int. When the fractional part of Val is 0.5, rounds to the nearest even int (per the IEEE-754 default rounding mode). Fails if not IsFinite(Val).

Int	
Returns the int that equals Val without the fractional part. Fails if not IsFinite(val).

ToString	
Makes a string representation of Val.

ToString	
Makes a printable string representation of Val.

listenable	
A parametric interface combining awaitable and subscribable.

listenable	
A parameterless interface combining awaitable and subscribable.

Localize	
Makes a string by localizing Message based on the current locale.

Clamp	
Constrains the value of Val between A and B. Robustly handles different argument orderings. Returns the median of Val, A, and B, such that comparisons with NaN operate as if NaN > +Inf.

Clamp	
Constrains the value of Val between A and B. Robustly handles different argument orderings. Returns the median of Val, A, and B.

Min	
Returns the minimum of X and Y.

Max	
Returns the maximum of X and Y.

Min	
Returns the minimum of X and Y unless either are NaN. Returns NaN if either X or Y are NaN.

Max	
Returns the maximum of X and Y unless either are NaN. Returns NaN if either X or Y are NaN.

Sqrt	
Returns the square root of X if X >= 0.0. Returns NaN if X < 0.0.

Sin	
Returns the sine of X if IsFinite(X). Returns NaN if `not IsFinite(X)

Cos	
Returns the cosine of X if IsFinite(X). Returns NaN if `not IsFinite(X)

Tan	
Returns the tangent of X if IsFinite(X). Returns NaN if `not IsFinite(X).

ArcSin	
Returns the inverse sine (arcsine) of X if -1.0 <= X <= 1.0.

ArcCos	
Returns the inverse cosine (arccosine) of X if -1.0 <= X <= 1.0.

ArcTan	
Returns the inverse tangent (arctangent) of X such that:-PiFloat/2.0 <= ArcTan(x) <= PiFloat/2.0.

ArcTan	
Returns the angle in radians at the origin between a ray pointing to (X, Y) and the positive X axis such that -PiFloat < ArcTan(Y, X) <= PiFloat. Returns 0.0 if X=0.0 and Y=0.0.

Sinh	
Returns the hyperbolic sine of X.

Cosh	
Returns the hyperbolic cosine of X.

Tanh	
Returns the hyperbolic tangent of X.

ArSinh	
Returns the inverse hyperbolic sine of X if IsFinite(X).

ArCosh	
Returns the inverse hyperbolic cosine of X if 1.0 <= X.

ArTanh	
Returns the inverse hyperbolic tangent of X if IsFinite(X).

Pow	
Returns A to the power of B.

Quotient	
Returns the quotient X/Y as defined by Euclidean division, i.e.:

Quotient[X/Y] = Floor[X/Y] when Y > 0
Quotient[X/Y] = Ceil[X/Y] when Y < 0
Quotient[X/Y] * Y + Mod[X,Y] = X Fails if Y = 0.
Mod	
Returns the remainder of X/Y as defined by Euclidean division, i.e.:

Mod[X,Y] = X - Quotient(X/Y)*Y
0 <= Mod[X,Y] < Abs(Y) Fails if Y=0.
Exp	
Returns the natural exponent of X.

Ln	
Returns the natural logarithm of X.

Log	
Returns the base B logarithm of X.

Lerp	
Used to linearly interpolate/extrapolate between From (when Parameter = 0.0) and To (when Parameter = 1.0). Expects that all arguments are finite. Returns From*(1 - Parameter) + To*Parameter.

Sgn	
Returns the sign of Val:

1 if Val > 0
0 if Val = 0
-1 if Val < 0
Sgn	
Returns the sign of Val:

1.0 if Val > 0.0
0.0 if Val = 0.0
-1.0 if Val < 0.0
NaN if Val = NaN
IsAlmostEqual	
Succeeds if Val1 and Val2 are within AbsoluteTolerance of each other.

Print	
Writes Message to a dedicated Print log while displaying it in Color on the client screen for Duration seconds. By default, Color is NamedColors.White and Duration is 2.0 seconds.

signalable	
A parametric interface implemented by events with a payload that can be signaled. Can be used with awaitable, subscribable, or both (see: listenable).

Join	
Makes a string by concatenating Separator between the elements of Strings.

ToString	
Returns String without modification.

ToString	
Makes a string from Character.

subscribable	
A parametric interface implemented by events with a payload that can be subscribed to. Matched with signalable.

subscribable	
A parameterless interface implemented by events that can be subscribed to.

Data
Name	Description
Inf	 
NaN	 
